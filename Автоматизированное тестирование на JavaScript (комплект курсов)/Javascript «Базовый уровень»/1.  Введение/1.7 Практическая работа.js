/*

https://go.skillbox.ru/profession/paket-autotesting-javascript/js/505c0fe8-80e0-4a64-98d3-81781f83ed22/homework

Цель задания
Это вводное задание. Вы подготовите все необходимые инструменты и рабочую среду для выполнения практических работ, 
научитесь выгружать работы на GitLab c помощью Git, а также познакомитесь с проверяющим куратором.


Термины
Git — система (приложение), позволяющая управлять файлами вашего проекта и упростить совместную работу над ним. 
В этом курсе вы будете работать с Git, используя консоль или терминал вашей операционной системы. 

GitLab — веб-приложение, позволяющее хранить ваш проект на удалённом сервере. 
Грубо говоря, GitLab можно сравнить с известными облачными хранилищами популярных поисковиков.

Node.js — среда исполнения кода. JavaScript можно запускать не только в браузере, но и другими способами. 
Часть кода из заданий этого курса вы будете запускать с помощью Node.js.


Что нужно сделать
Если при выполнении работы у вас возникнут вопросы или трудности, напишите куратору. Он поможет решить проблему.

Шаг 1. Установите инструменты разработчика
1. Установите редактор кода Visual Studio Code https://code.visualstudio.com/ (не путайте с Visual Studio, это другая программа).
2. Установите систему контроля версий Git. https://git-scm.com/
Для пользователей Windows. Вместе с Git устанавливается программа Git Bash. Это интерфейс командной строки (консоль, терминал), который рекомендуется использовать в рамках курса.
Для пользователей Linux/macOS. В рамках курса мы часто будем использовать интерфейс командной строки (консоль, терминал). В вашей операционной системе он уже установлен. Вы можете найти его в списке программ.
Также вы можете использовать консоль, встроенную в редактор Visual Studio Code. В этом курсе консоль, терминал, Git Bash мы будем называть консолью. Принцип их работы одинаковый.
3. Установите среду исполнения кода на JavaScript Node.js. https://nodejs.org/
4. Установите браузер Chrome или любой другой на основе Chromium (Opera, Яндекс Браузер и так далее).

Шаг 2. Создание папки проекта
Перед выполнением этого шага рекомендуем посмотреть видеоинструкцию. https://youtu.be/upZsCz4qP0Q

1. Создайте папку на компьютере. В ней будут храниться проекты, которые вы разрабатываете на курсе. Рекомендуем называть папку на английском языке.
2. Перейдите в папку вашего проекта. Для этого необходимо открыть консоль, ввести в ней команду cd {путь к папке с проектом} и нажать Enter. Если путь указан верно, то текущей папкой будет папка вашего проекта.
3. Перейдите в GitLab (доступ к GitLab был выслан вам на почту). Нажмите кнопку Clone и скопируйте строку для доступа по HTTPS.
4. Введите в консоли команду git clone {скопированный путь к репозиторию} и нажмите Enter. Для клонирования вам понадобится ввести логин и пароль от вашего аккаунта в GitLab. 
5. Проверьте папку вашего проекта. В ней должна появиться папка JS.
6. Откройте только что созданную папку проекта в Visual Studio Code.
7. Откройте консоль редактора и создайте новую ветку, используя команду git checkout -b home-task/intro. Нажмите Enter. Ветка — это отдельная версия вашего проекта (черновик).

Шаг 3. Первая программа
1. Создайте в папке практической работы JS/01_intro новый файл index.js.
2. Напишите в файле console.log('Hello, world!'). Это ваш первый скрипт.
3. Выполните команду в консоли node index.js. На экран должно быть выведено сообщение «Hello, world!».

Шаг 4. Выгрузка работы в GitLab
1. В консоли или терминале редактора выполните команду git add . (точка — это часть команды) и нажмите Enter.
2. Далее необходимо сделать коммит, использовав команду git commit -m “initial commit”.
3. Проект готов к отправке в GitLab. Для этого введите команду git push origin home-task/intro. Если всё прошло успешно, то в GitLab появится новая ветка с файлом index.js.
4. Создайте merge request новой ветки в master.
5. Отправьте ссылку на коммит вашему куратору, сообщите о проделанной работе или задайте вопрос.
Если после проделанных шагов у вас остались вопросы, куратор, проверяющий вашу работу, обязательно поможет на них ответить.


Что оценивается
Если у вас всё получилось, задание можно считать успешно выполненным. Если совсем не получается — обратитесь за помощью.


Советы и рекомендации 
Видеоинструкция по выгрузке работы в GtiLab. https://youtu.be/upZsCz4qP0Q
Прочтите инструкцию по работе с gitlab.skillbox.ru (разделы «Начало работы» и «Сдача практических работ»). https://docs.google.com/document/d/1inrSiQsTiD9Js9_pMplEWkkHC_SUE9GK9CPV_VyEW54/edit?usp=sharing
Посмотрите, как сдавать работы через Git: пример отправки работы через GitLab. https://docs.google.com/document/d/1JZVcckGu_vLt6EZ1RL8LcVu6w2EsnI33qWw1aPwA_ok/edit?usp=sharing
Установка Git Bash в Windows и минимальная настройка Git (для всех ОС). https://youtu.be/niC4-rOaloc
*/